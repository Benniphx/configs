#!/bin/bash

set -e

### Pyenv ######################################################################

pyenv_dir="$HOME/.pyenv"
git clone https://github.com/pyenv/pyenv.git "$pyenv_dir" || \
  git -C "$pyenv_dir" pull --rebase origin master
export PATH="$HOME/.pyenv/bin:$PATH"
pyenv_ve_dir="$(pyenv root)/plugins/pyenv-virtualenv"
git clone https://github.com/pyenv/pyenv-virtualenv.git "$pyenv_ve_dir" || \
  git -C "$pyenv_ve_dir" pull --rebase origin master
eval "$(pyenv init -)"

# Python 2.7
python2_version="2.7.12"
pyenv install --skip-existing "$python2_version"
pyenv shell "$python2_version"
pip install --upgrade pip virtualenv
pip install awscli
pip install awscfncli
pip install awslogs
pip install aws-shell
pip install docker-compose
pip install httpie
pip install s4cmd

# Python 3.5
python3_version="3.5.2"
pyenv install --skip-existing "$python3_version"
pyenv shell "$python3_version"
pip install --upgrade pip virtualenv
pip install awscli
pip install awscfncli
pip install awslogs
pip install aws-shell
pip install docker-compose
pip install httpie
# s4cmd is Python 2 only

pyenv global "$python2_version"

### Rbenv ######################################################################

rbenv_dir="$HOME/.rbenv"
git clone https://github.com/rbenv/rbenv.git "$rbenv_dir" || \
  git -C "$rbenv_dir" pull --rebase origin master
export PATH="$HOME/.rbenv/bin:$PATH"
ruby_build_dir="$HOME/.rbenv/plugins/ruby-build"
git clone https://github.com/rbenv/ruby-build.git "$ruby_build_dir" || \
  git -C "$ruby_build_dir" pull --rebase origin master
eval "$(rbenv init -)"

# Ruby 2.4
ruby_version="2.4.1"
rbenv install --skip-existing "$ruby_version"
rbenv shell "$ruby_version"
gem install bundler

rbenv global "$ruby_version"

### nvm ########################################################################

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | \
  bash
export NVM_DIR="$HOME/.nvm"
source "$NVM_DIR/nvm.sh"

# Node LTS
nvm install v7.7.1

### utils ######################################################################

if ! which brew >/dev/null ; then
  if [[ "$OSTYPE" = darwin* ]] ; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
  fi
fi

brew update
brew install git-secrets
brew install terraform

brew tap wata727/tflint
brew install tflint
