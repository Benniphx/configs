#!/bin/bash

trap "echo -e '\nCaught ^C from user - exiting now' ; exit 130" SIGINT

if ! which brew >/dev/null ; then
  if [[ "$OSTYPE" = darwin* ]] ; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
  fi
fi

### Pyenv ######################################################################

pyenv_dir="$HOME/.pyenv"
git clone https://github.com/pyenv/pyenv.git "$pyenv_dir" || \
  git -C "$pyenv_dir" pull --rebase origin master
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"

pyenv_ve_dir="$(pyenv root)/plugins/pyenv-virtualenv"
git clone https://github.com/pyenv/pyenv-virtualenv.git "$pyenv_ve_dir" || \
  git -C "$pyenv_ve_dir" pull --rebase origin master
eval "$(pyenv virtualenv-init -)"

# Fixes "Missing the OpenSSL lib?" Python build error on OS X High Sierra
if [[ "$OSTYPE" = darwin* ]] ; then
  export CFLAGS="-I$(brew --prefix openssl)/include"
  export LDFLAGS="-L$(brew --prefix openssl)/lib"
fi

# Python 2.7
python2_version="2.7.14"
pyenv install --skip-existing "$python2_version"
pyenv shell "$python2_version"
pip install --upgrade pip virtualenv
pip install awscli
pip install awscfncli
pip install awslogs
pip install aws-shell
pip install docker-compose
pip install httpie
pip install s4cmd

# Python 3.6
python3_version="3.6.3"
pyenv install --skip-existing "$python3_version"
pyenv shell "$python3_version"
pip install --upgrade pip virtualenv
pip install awscli
pip install awscfncli
pip install awslogs
pip install aws-shell
pip install docker-compose
pip install httpie
# s4cmd is Python 2 only

pyenv global "$python3_version"

### Rbenv ######################################################################

rbenv_dir="$HOME/.rbenv"
git clone https://github.com/rbenv/rbenv.git "$rbenv_dir" || \
  git -C "$rbenv_dir" pull --rebase origin master
export PATH="$HOME/.rbenv/bin:$PATH"
ruby_build_dir="$HOME/.rbenv/plugins/ruby-build"
git clone https://github.com/rbenv/ruby-build.git "$ruby_build_dir" || \
  git -C "$ruby_build_dir" pull --rebase origin master
eval "$(rbenv init -)"

# Ruby 2.4
ruby_version="2.4.1"
rbenv install --skip-existing "$ruby_version"
rbenv shell "$ruby_version"
gem install bundler
gem install terraform_landscape terraforming

rbenv global "$ruby_version"

### nvm ########################################################################

node_version="lts/carbon"
export NVM_DIR="$HOME/.nvm" && (
  git clone https://github.com/creationix/nvm.git "$NVM_DIR"
  cd "$NVM_DIR"
  git fetch origin
  git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin`
) && \
  . "$NVM_DIR/nvm.sh" && \
  nvm install "$node_version" && nvm alias default "$node_version"

npm -g install gulp
npm -g install grunt-cli

### OS X only ##################################################################

if [[ "$OSTYPE" = darwin* ]]; then
  xcode-select --install
  brew tap caskroom/cask

  brew cask install gitup
  brew cask install docker
  brew cask install java
  brew cask install android-studio android-sdk

  brew cask cleanup
fi

### utils ######################################################################

brew install flake8
brew install git-secrets
brew install terraform terragrunt
brew install kubernetes-cli
brew install kompose
brew install openshift-cli
brew install rancher-cli rancher-compose
brew tap wata727/tflint
brew install tflint

#ocw_dir="$HOME/oc-cluster-wrapper"
#git clone https://github.com/openshift-evangelists/oc-cluster-wrapper.git \
#  "$ocw_dir" || git -C "$ocw_dir" pull --rebase origin master

brew cleanup
