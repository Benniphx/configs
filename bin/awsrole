#!/usr/bin/env bash

# Originally forked from:
# https://github.com/trek10inc/awsume/blob/40a527abea/awsume

### Helpers ####################################################################

exit_no_role() {
  local role_name="$1"

  echo -e "\nProfile '$role_name' has no role_arn defined"
  exit 1
}

exit_print_usage() {
  echo "Usage: awsrole <profile> <role_to_assume> [mfa_token]"
  exit 64
}

get_user_details() {
  local profile_name="$1"

  local identity_json=$(aws sts get-caller-identity --profile "$profile_name")
  [[ -z "$identity_json" ]] && exit 1

  read account_id user_arn <<< $(echo "$identity_json" | python -c '
import json, sys
creds = json.load(sys.stdin)
print(" ".join(creds[_] for _ in ("Account","Arn")))')
}

get_sts_for_user() {
  local profile_name="$1"
  local role_name="$2"

  if [[ -n "$3" ]] ; then
    local username=$(echo "$user_arn" | cut -d '/' -f2)
    local mfa_num="--serial-number arn:aws:iam::$account_id:mfa/$username"
    local mfa_token="--token $3"
  fi

  local sts_token_json=$(aws sts assume-role \
    --duration-seconds 900 \
    --profile "$profile_name" \
    --role-session-name "${profile_name}-via-sts" \
    --role-arn "arn:aws:iam::$account_id:role/$role_name" \
    $mfa_num $mfa_token)
  [[ -z "$sts_token_json" ]] && exit 1

  read token key id <<< $(echo "$sts_token_json" | python -c '
import json, sys
creds = json.load(sys.stdin)["Credentials"]
values = ("SessionToken","SecretAccessKey","AccessKeyId")
print(" ".join(creds[_] for _ in values))')

  export AWS_ACCESS_KEY_ID="$id"
  export AWS_SECRET_ACCESS_KEY="$key"
  export AWS_SESSION_TOKEN="$token"
}

print_session_env() {
  echo -e "Execute in your current shell:\n"
  echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
  echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
  echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
}

### Main #######################################################################

[[ $# -lt 2 ]] && exit_print_usage

get_user_details "$1"
get_sts_for_user "$1" "$2" "$3"
print_session_env
